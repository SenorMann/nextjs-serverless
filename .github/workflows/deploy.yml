name: Deploy to production

on:
  push:
    branches:
      - "main"

jobs:
  upload_artefact:
    name: Upload Artefact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          tag-prefix:  'v'
    
      - name: Upload Artefact
        env:
          JFROG_AUTH: ${{ secrets.JFROG_AUTH }}
          JFROG_USER: ${{ secrets.JFROG_USER }}
        run: |
          echo "registry=https://mlkmahmud.jfrog.io/artifactory/api/npm/sls-poc/" >> .npmrc
          echo "_auth=${JFROG_AUTH}" >> .npmrc
          echo "email=${JFROG_USER}" >> .npmrc
          echo "always-auth-true" >> .npmrc
          npm publish --registry https://mlkmahmud.jfrog.io/artifactory/api/npm/sls-poc/

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: [upload_artefact]
    strategy:
      matrix:
        node: [16]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}
      JFROG_URL: ${{ secrets.JFROG_URL }}
      JFROG_USER: ${{ secrets.JFROG_USER }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      
      - name: download and configure JFrog cli
        run: |
          npm install -g jfrog-cli-v2-jf
          jf config add --user ${JFROG_USER} --password ${JFROG_API_KEY} --artifactory-url ${JFROG_URL} --interactive false

      - name: Set latest version
        run: |
          echo "RELEASE_VERSION=$(npm pkg get version)" >> $GITHUB_ENV
          
      - name: download latest release
        run: jf rt dl "sls-poc/nextjs-serverless/-/nextjs-serverless-${RELEASE_VERSION}.tgz"
        env: 
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

      - name: Extract artefact
        run: |
          mv nextjs-serverless/-/*.tgz .
          tar zxvf *.tgz

      - name: Deploy to AWS
        run: |
          cd package/
          npm install
          npm run deploy

      
